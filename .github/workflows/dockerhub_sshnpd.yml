name: dockerhub_sshnpd

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions: # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  docker:
    strategy:
      matrix:
        include:
          - name: sshnpd
            dockerfile: ./packages/dart/sshnoports/tools/Dockerfile
          - name: activate_sshnpd
            dockerfile: ./packages/dart/sshnoports/tools/Dockerfile.activate
          - name: sshnpd-slim
            dockerfile: ./packages/dart/sshnoports/tools/Dockerfile.sshnpd-slim
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Ensure pubspec.yaml matches git ref (if current git ref is a version tag)
        shell: bash
        if: startsWith(github.ref, 'refs/tags/v')
        working-directory: ./packages/dart/sshnoports
        run: |
          REF=${{ github.ref }}
          VER=${REF:11}
          sed -i "0,/version:/{s/version: \(.*\)/version: "${VER}"/}" pubspec.yaml
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
      - name: Login to Docker Hub
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Extract version for docker tag
      - name: Get version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@15560696de535e4014efeff63c48f16952e52dd1 # v6.2.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          provenance: false
          tags: |
            atsigncompany/${{ matrix.name }}:${{ env.VERSION }}
            atsigncompany/${{ matrix.name }}:release-${{ env.VERSION }}
      # Promote to latest so long as this isn't a pre-release
      - name: Tag latest
        run: |
          RELEASE_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ env.VERSION }}")
          PRERELEASE=$(echo "$RELEASE_JSON" | jq -r '.prerelease')
          if [ $PRERELEASE == 'false' ]; then
            docker buildx imagetools create -t \
              atsigncompany/${{ matrix.name }}:latest \
              atsigncompany/${{ matrix.name }}:release-${{ env.VERSION }}
          fi

name: end2end_tests

permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - trunk

  pull_request:
    branches:
      - trunk

env:
  SSHNP_ATSIGN: "@8incanteater"
  SSHNPD_ATSIGN: "@8052simple"
  DOCKER_COMPOSE_UP_CMD: "docker compose up --exit-code-from=container-sshnp"

  # Fallback values for missing matrix values
  DEFAULT_RVD_ATSIGN: "@rv_am"

  RELEASES: |
    latest
    v3.1.2
    v3.2.0
    v3.3.0

  BRANCHES: |
    trunk

jobs:
  e2e_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        np: [local, trunk, installer]
        npd: [local, trunk]
        exclude:
          # Don't run these against themselves, they're irrelevant
          - np: trunk
            npd: trunk
        include:
          ### RVD TESTS ###
          # - np: local
          #   npd: local
          #   rvd: local
          #   rvd_atsign: "@8485wealthy51"

          - np: latest
            npd: latest
            rvd: local
            rvd_atsign: "@8485wealthy51"
          ### INSTALLER TESTS ###
          - np: local
            npd: installer
            wait: 30
          - np: trunk
            npd: installer
            wait: 30
          - np: installer
            npd: installer
            wait: 30
          ### BACKWARD TESTS WITHOUT SYNC ###
          - np: local
            npd: latest

          - np: latest
            npd: local

          - np: local
            npd: v3.3.0

          - np: v3.3.0
            npd: local

          ### BACKWARD TESTS WHICH NEED SYNC ###
          - np: local
            npd: v3.1.2
            wait: 120

          - np: local
            npd: v3.2.0
            wait: 120

          - np: v3.1.2
            npd: local
            wait: 120

          - np: v3.2.0
            npd: local
            wait: 120
    steps:
      - name: Show Matrix Values
        run: |
          echo "job index: ${{ strategy.job-index }}"
          echo "np: ${{ matrix.np }}"
          echo "npd: ${{ matrix.npd }}"
          echo "rvd: ${{ matrix.rvd }}"
          echo "rvd_atsign: ${{ matrix.rvd_atsign || env.DEFAULT_RVD_ATSIGN }}"
          echo "wait: ${{ matrix.wait }}"

      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Copy NP/NPD keys
        working-directory: tests/end2end_tests/contexts
        run: |
          echo "${{ secrets.ATKEYS_8INCANTEATER }}" > sshnp/keys/${{ env.SSHNP_ATSIGN }}_key.atKeys
          echo "${{ secrets.ATKEYS_8052SIMPLE }}" > sshnpd/keys/${{ env.SSHNPD_ATSIGN }}_key.atKeys

      - name: Copy RVD keys
        working-directory: tests/end2end_tests/contexts
        if: matrix.rvd
        run: |
          echo "${{ secrets.ATKEYS_8485WEALTHY51 }}" > sshrvd/keys/${{ matrix.rvd_atsign }}_key.atKeys

      - name: Set up entrypoints
        uses: ./.github/composite/setup_entrypoints
        with:
          devicename: ${{ github.run_id }}${{ github.run_attempt }}${{ strategy.job-index }}
          sshnp_atsign: ${{ env.SSHNP_ATSIGN }}
          sshnpd_atsign: ${{ env.SSHNPD_ATSIGN }}
          sshrvd_atsign: ${{ matrix.rvd_atsign || env.DEFAULT_RVD_ATSIGN }}
          wait_time: ${{ matrix.wait }}
          sshnp: ${{ matrix.np }}
          sshnpd: ${{ matrix.npd }}

      - name: Ensure entrypoints exist
        working-directory: tests/end2end_tests/contexts
        run: |
          cat sshnp/entrypoint.sh
          cat sshnpd/entrypoint.sh
          cat sshrvd/entrypoint.sh

      - name: Store lists in env
        run: |

      - name: Add runtime-release image to docker-compose.yaml
        working-directory: tests/end2end_tests/tests
        if: ${{ contains(env.RELEASES, matrix.np) || contains(env.RELEASES, matrix.npd) || (matrix.rvd && contains(env.RELEASES, matrix.rvd)) }}
        run: |
          cat service-image-runtime-release.yaml >> docker-compose.yaml
          if [ "${{contains(env.RELEASES, matrix.np)}}" = true ]; then
            echo '        - release=${{ matrix.np }}' >> docker-compose.yaml
            echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.np }}' >> docker-compose.yaml
          elif [ "${{contains(env.RELEASES, matrix.npd)}}" = true ]; then
            echo '        - release=${{ matrix.npd }}' >> docker-compose.yaml
            echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.npd }}' >> docker-compose.yaml
          elif [ "${{contains(env.RELEASES, matrix.rvd)}}" = true ]; then
            echo '        - release=${{ matrix.rvd }}' >> docker-compose.yaml
            echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.rvd }}' >> docker-compose.yaml
          fi

      - name: Add runtime-branch image to docker-compose.yaml
        working-directory: tests/end2end_tests/tests
        if: ${{ contains(env.BRANCHES, matrix.np) || contains(env.BRANCHES, matrix.npd) || (matrix.rvd && contains(env.BRANCHES, matrix.rvd)) }}
        run: |
          cat service-image-runtime-branch.yaml >> docker-compose.yaml
          if [ "${{contains(env.BRANCHES, matrix.np)}}" = true ]; then
            echo '        - branch=${{ matrix.np }}' >> docker-compose.yaml
            echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.np }}' >> docker-compose.yaml
          elif [ "${{contains(env.BRANCHES, matrix.npd)}}" = true ]; then
            echo '        - branch=${{ matrix.npd }}' >> docker-compose.yaml
            echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.npd }}' >> docker-compose.yaml
          elif [ "${{contains(env.BRANCHES, matrix.rvd)}}" = true ]; then
            echo '        - branch=${{ matrix.rvd }}' >> docker-compose.yaml
            echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.rvd }}' >> docker-compose.yaml
          fi

      - name: Add runtime-sshnp-installer image to docker-compose.yaml
        working-directory: tests/end2end_tests/tests
        if: ${{ matrix.np == 'installer' }}
        run: |
          cat service-image-runtime-sshnp-installer.yaml >> docker-compose.yaml
          echo '        - client_atsign="${{ env.SSHNP_ATSIGN }}"' >> docker-compose.yaml
          echo '        - device_atsign="${{ env.SSHNPD_ATSIGN }}"' >> docker-compose.yaml
          echo '        - host_atsign="${{ matrix.rvd_atsign || env.DEFAULT_RVD_ATSIGN }}"' >> docker-compose.yaml
          echo '    image: atsigncompany/sshnp-e2e-runtime:sshnp-installer' >> docker-compose.yaml

      - name: Add runtime-sshnpd-installer image to docker-compose.yaml
        working-directory: tests/end2end_tests/tests
        if: ${{ matrix.npd == 'installer' }}
        run: |
          cat service-image-runtime-sshnpd-installer.yaml >> docker-compose.yaml
          echo '        - client_atsign="${{ env.SSHNP_ATSIGN }}"' >> docker-compose.yaml
          echo '        - device_atsign="${{ env.SSHNPD_ATSIGN }}"' >> docker-compose.yaml
          echo '        - device_name=${{ github.run_id }}${{ github.run_attempt }}${{ strategy.job-index }}' >> docker-compose.yaml
          echo '    image: atsigncompany/sshnp-e2e-runtime:sshnpd-installer' >> docker-compose.yaml

      - name: Add container-sshnp to docker-compose.yaml
        working-directory: tests/end2end_tests/tests
        run: |
          cat service-container-sshnp.yaml >> docker-compose.yaml
          if [ "${{ matrix.np }}" = 'installer' ]; then
            echo '    image: atsigncompany/sshnp-e2e-runtime:sshnp-installer' >> docker-compose.yaml
          else
            echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.np }}' >> docker-compose.yaml
          fi
          echo '    depends_on:' >> docker-compose.yaml
          echo '      - container-sshnpd' >> docker-compose.yaml
          if [ "${{contains(env.RELEASES, matrix.np)}}" = true ]; then
            echo '      - image-runtime-release' >> docker-compose.yaml
          elif [ "${{contains(env.BRANCHES, matrix.np)}}" = true ]; then
            echo '      - image-runtime-branch' >> docker-compose.yaml
          elif [ "${{ matrix.np }}" = 'installer' ]; then
            echo '      - image-runtime-sshnp-installer' >> docker-compose.yaml
          else
            echo '      - image-runtime-local' >> docker-compose.yaml
          fi

      - name: Add container-sshnpd to docker-compose.yaml
        working-directory: tests/end2end_tests/tests
        run: |
          cat service-container-sshnpd.yaml >> docker-compose.yaml
          if [ "${{ matrix.npd }}" = 'installer' ]; then
            echo '    image: atsigncompany/sshnp-e2e-runtime:sshnpd-installer' >> docker-compose.yaml
          else
            echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.npd }}' >> docker-compose.yaml
          fi
          echo '    depends_on:' >> docker-compose.yaml
          if [ "${{ matrix.rvd }}" = true ]; then
            echo '      - container-sshrvd' >> docker-compose.yaml
          fi
          if [ "${{contains(env.RELEASES, matrix.npd)}}" = true ]; then
            echo '      - image-runtime-release' >> docker-compose.yaml
          elif [ "${{contains(env.BRANCHES, matrix.npd)}}" = true ]; then
            echo '      - image-runtime-branch' >> docker-compose.yaml
          elif [ "${{ matrix.npd }}" = 'installer' ]; then
            echo '      - image-runtime-sshnpd-installer' >> docker-compose.yaml
          else
            echo '      - image-runtime-local' >> docker-compose.yaml
          fi

      - name: Add container-sshrvd to docker-compose.yaml
        working-directory: tests/end2end_tests/tests
        if: matrix.rvd
        run: |
          cat service-container-sshrvd.yaml >> docker-compose.yaml
          echo '    image: atsigncompany/sshnp-e2e-runtime:${{ matrix.rvd }}' >> docker-compose.yaml
          echo '    depends_on:' >> docker-compose.yaml
          if [ "${{contains(env.RELEASES, matrix.rvd)}}" = true ]; then
            echo '      - image-runtime-release' >> docker-compose.yaml
          elif [ "${{contains(env.BRANCHES, matrix.rvd)}}" = true ]; then
            echo '      - image-runtime-branch' >> docker-compose.yaml
          else
            echo '      - image-runtime-local' >> docker-compose.yaml
          fi

      - name: docker-compose.yaml
        if: always()
        working-directory: tests/end2end_tests/tests
        run: |
          cat docker-compose.yaml

      - name: Build
        working-directory: tests/end2end_tests/tests
        run: |
          docker compose build

      - name: Test
        working-directory: tests/end2end_tests/tests
        run: |
          ${{ env.DOCKER_COMPOSE_UP_CMD }}

      - name: Logs
        if: always()
        working-directory: tests/end2end_tests/tests
        run: |
          docker compose ps -a
          docker compose logs --timestamps

      - name: Tear down
        if: always()
        working-directory: tests/end2end_tests/tests
        run: |
          docker compose down

# key allocation & free is a known false positive
# TODO: I couldn't see anything wrong with how we are doing it, but need to get 
# a second set of eyes on this issue - @XavierChanth
{
  atchops_rsakey_privatekey_init
    Memcheck:Leak
    match-leak-kinds: definite
    fun:malloc
    fun:atchops_rsakey_privatekey_init
    fun:main
}
{
  atchops_rsakey_privatekey_free
    Memcheck:Free
    fun:free
    fun:atchops_rsakey_privatekey_free
    fun:atclient_atkeys_free
    fun:main
}
# Things to fix
{
  FIXME cJSON_PrintUnformatted
    Memcheck:Leak
    match-leak-kinds: reachable
    fun:realloc
    fun:print
    fun:cJSON_PrintUnformatted
    fun:main
}
{
  FIXME atlogger_get_instance
    Memcheck:Leak
    match-leak-kinds: reachable
    fun:malloc
    fun:atlogger_get_instance
    fun:atlogger_set_logging_level
    fun:main
}
{
  FIXME atclient_atsign_init
    Memcheck:Leak
    match-leak-kinds: definite
    fun:malloc
    fun:atclient_atsign_init
    fun:atclient_put
    fun:refresh_device_entry
    fun:start_thread
    fun:clone
}
{
  FIXME atclient_connection_enable_hooks
    Memcheck:Leak
    match-leak-kinds: definite
    fun:malloc
    fun:atclient_connection_enable_hooks
    fun:set_worker_hooks
    fun:main
}

# ignore libc
{
  libc 1
    Memcheck:Leak
    match-leak-kinds: reachable
    fun:calloc
    fun:UnknownInlinedFun
    fun:_dl_new_object
    fun:_dl_map_object_from_fd
    fun:_dl_map_object
    fun:dl_open_worker_begin
    fun:_dl_catch_exception
    fun:dl_open_worker
    fun:_dl_catch_exception
    fun:_dl_open
    fun:do_dlopen
    fun:_dl_catch_exception
    fun:_dl_catch_error
}
{
  libc 2
    Memcheck:Leak
    match-leak-kinds: reachable
    fun:malloc
    fun:malloc
    fun:strdup
    fun:_dl_load_cache_lookup
    fun:_dl_map_object
    fun:dl_open_worker_begin
    fun:_dl_catch_exception
    fun:dl_open_worker
    fun:_dl_catch_exception
    fun:_dl_open
    fun:do_dlopen
    fun:_dl_catch_exception
    fun:_dl_catch_error
}
{
  libc 3
    Memcheck:Leak
    match-leak-kinds: reachable
    fun:malloc
    fun:UnknownInlinedFun
    fun:_dl_new_object
    fun:_dl_map_object_from_fd
    fun:_dl_map_object
    fun:dl_open_worker_begin
    fun:_dl_catch_exception
    fun:dl_open_worker
    fun:_dl_catch_exception
    fun:_dl_open
    fun:do_dlopen
    fun:_dl_catch_exception
    fun:_dl_catch_error
}
{
  libc 4
    Memcheck:Leak
    match-leak-kinds: definite
    fun:malloc
    fun:UnknownInlinedFun
    fun:_dl_map_object_deps
    fun:dl_open_worker_begin
    fun:_dl_catch_exception
    fun:dl_open_worker
    fun:_dl_catch_exception
    fun:_dl_open
    fun:do_dlopen
    fun:_dl_catch_exception
    fun:_dl_catch_error
    fun:dlerror_run
    fun:__libc_dlopen_mode
}
{
  libc 5
    Memcheck:Leak
    match-leak-kinds: reachable
    fun:calloc
    fun:UnknownInlinedFun
    fun:_dl_check_map_versions
    fun:dl_open_worker_begin
    fun:_dl_catch_exception
    fun:dl_open_worker
    fun:_dl_catch_exception
    fun:_dl_open
    fun:do_dlopen
    fun:_dl_catch_exception
    fun:_dl_catch_error
    fun:dlerror_run
    fun:__libc_dlopen_mode
}
